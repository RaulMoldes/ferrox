//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_86
.address_size 64

	// .globl	elementwise_add
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
// _ZZ15elementwise_maxE8shared_a has been demoted
// _ZZ15elementwise_maxE8shared_b has been demoted
// _ZZ15elementwise_minE8shared_a has been demoted
// _ZZ15elementwise_minE8shared_b has been demoted

.visible .entry elementwise_add(
	.param .u64 elementwise_add_param_0,
	.param .u64 elementwise_add_param_1,
	.param .u64 elementwise_add_param_2,
	.param .u32 elementwise_add_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_add_param_0];
	ld.param.u64 	%rd2, [elementwise_add_param_1];
	ld.param.u64 	%rd3, [elementwise_add_param_2];
	ld.param.u32 	%r2, [elementwise_add_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB0_2:
	ret;

}
	// .globl	elementwise_abs
.visible .entry elementwise_abs(
	.param .u64 elementwise_abs_param_0,
	.param .u64 elementwise_abs_param_1,
	.param .u32 elementwise_abs_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [elementwise_abs_param_0];
	ld.param.u64 	%rd2, [elementwise_abs_param_1];
	ld.param.u32 	%r2, [elementwise_abs_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB1_2:
	ret;

}
	// .globl	elementwise_mul
.visible .entry elementwise_mul(
	.param .u64 elementwise_mul_param_0,
	.param .u64 elementwise_mul_param_1,
	.param .u64 elementwise_mul_param_2,
	.param .u32 elementwise_mul_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_mul_param_0];
	ld.param.u64 	%rd2, [elementwise_mul_param_1];
	ld.param.u64 	%rd3, [elementwise_mul_param_2];
	ld.param.u32 	%r2, [elementwise_mul_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB2_2:
	ret;

}
	// .globl	elementwise_div
.visible .entry elementwise_div(
	.param .u64 elementwise_div_param_0,
	.param .u64 elementwise_div_param_1,
	.param .u64 elementwise_div_param_2,
	.param .u32 elementwise_div_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd3, [elementwise_div_param_0];
	ld.param.u64 	%rd4, [elementwise_div_param_1];
	ld.param.u64 	%rd5, [elementwise_div_param_2];
	ld.param.u32 	%r2, [elementwise_div_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_4;

	cvta.to.global.u64 	%rd6, %rd4;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	setp.neu.f32 	%p2, %f1, 0f00000000;
	cvta.to.global.u64 	%rd9, %rd5;
	add.s64 	%rd2, %rd9, %rd7;
	@%p2 bra 	$L__BB3_3;
	bra.uni 	$L__BB3_2;

$L__BB3_3:
	cvta.to.global.u64 	%rd10, %rd3;
	shl.b64 	%rd11, %rd1, 2;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f2, [%rd12];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd2], %f3;
	bra.uni 	$L__BB3_4;

$L__BB3_2:
	mov.u32 	%r6, 2139095040;
	st.global.u32 	[%rd2], %r6;

$L__BB3_4:
	ret;

}
	// .globl	elementwise_reciprocal
.visible .entry elementwise_reciprocal(
	.param .u64 elementwise_reciprocal_param_0,
	.param .u64 elementwise_reciprocal_param_1,
	.param .u32 elementwise_reciprocal_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [elementwise_reciprocal_param_0];
	ld.param.u64 	%rd3, [elementwise_reciprocal_param_1];
	ld.param.u32 	%r2, [elementwise_reciprocal_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB4_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.neu.f32 	%p2, %f1, 0f00000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB4_3;
	bra.uni 	$L__BB4_2;

$L__BB4_3:
	rcp.rn.f32 	%f2, %f1;
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB4_4;

$L__BB4_2:
	mov.u32 	%r6, 2139095040;
	st.global.u32 	[%rd1], %r6;

$L__BB4_4:
	ret;

}
	// .globl	elementwise_reciprocal_f64
.visible .entry elementwise_reciprocal_f64(
	.param .u64 elementwise_reciprocal_f64_param_0,
	.param .u64 elementwise_reciprocal_f64_param_1,
	.param .u32 elementwise_reciprocal_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [elementwise_reciprocal_f64_param_0];
	ld.param.u64 	%rd3, [elementwise_reciprocal_f64_param_1];
	ld.param.u32 	%r2, [elementwise_reciprocal_f64_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	setp.neu.f64 	%p2, %fd1, 0d0000000000000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB5_3;
	bra.uni 	$L__BB5_2;

$L__BB5_3:
	rcp.rn.f64 	%fd2, %fd1;
	st.global.f64 	[%rd1], %fd2;
	bra.uni 	$L__BB5_4;

$L__BB5_2:
	mov.u64 	%rd8, 9218868437227405312;
	st.global.u64 	[%rd1], %rd8;

$L__BB5_4:
	ret;

}
	// .globl	elementwise_exp
.visible .entry elementwise_exp(
	.param .u64 elementwise_exp_param_0,
	.param .u64 elementwise_exp_param_1,
	.param .u32 elementwise_exp_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [elementwise_exp_param_0];
	ld.param.u64 	%rd2, [elementwise_exp_param_1];
	ld.param.u32 	%r2, [elementwise_exp_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r6, %f9;
	shl.b32 	%r7, %r6, 23;
	mov.b32 	%f15, %r7;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f17;

$L__BB6_2:
	ret;

}
	// .globl	elementwise_log
.visible .entry elementwise_log(
	.param .u64 elementwise_log_param_0,
	.param .u64 elementwise_log_param_1,
	.param .u32 elementwise_log_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [elementwise_log_param_0];
	ld.param.u64 	%rd3, [elementwise_log_param_1];
	ld.param.u32 	%r2, [elementwise_log_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_6;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.gtu.f32 	%p2, %f1, 0f00000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB7_3;
	bra.uni 	$L__BB7_2;

$L__BB7_3:
	setp.lt.f32 	%p4, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B000000;
	selp.f32 	%f2, %f7, %f1, %p4;
	selp.f32 	%f8, 0fC1B80000, 0f00000000, %p4;
	mov.b32 	%r6, %f2;
	add.s32 	%r7, %r6, -1059760811;
	and.b32  	%r8, %r7, -8388608;
	sub.s32 	%r9, %r6, %r8;
	mov.b32 	%f9, %r9;
	cvt.rn.f32.s32 	%f10, %r8;
	mov.f32 	%f11, 0f34000000;
	fma.rn.f32 	%f12, %f10, %f11, %f8;
	add.f32 	%f13, %f9, 0fBF800000;
	mov.f32 	%f14, 0f3E1039F6;
	mov.f32 	%f15, 0fBE055027;
	fma.rn.f32 	%f16, %f15, %f13, %f14;
	mov.f32 	%f17, 0fBDF8CDCC;
	fma.rn.f32 	%f18, %f16, %f13, %f17;
	mov.f32 	%f19, 0f3E0F2955;
	fma.rn.f32 	%f20, %f18, %f13, %f19;
	mov.f32 	%f21, 0fBE2AD8B9;
	fma.rn.f32 	%f22, %f20, %f13, %f21;
	mov.f32 	%f23, 0f3E4CED0B;
	fma.rn.f32 	%f24, %f22, %f13, %f23;
	mov.f32 	%f25, 0fBE7FFF22;
	fma.rn.f32 	%f26, %f24, %f13, %f25;
	mov.f32 	%f27, 0f3EAAAA78;
	fma.rn.f32 	%f28, %f26, %f13, %f27;
	mov.f32 	%f29, 0fBF000000;
	fma.rn.f32 	%f30, %f28, %f13, %f29;
	mul.f32 	%f31, %f13, %f30;
	fma.rn.f32 	%f32, %f31, %f13, %f13;
	mov.f32 	%f33, 0f3F317218;
	fma.rn.f32 	%f36, %f12, %f33, %f32;
	setp.lt.u32 	%p5, %r6, 2139095040;
	@%p5 bra 	$L__BB7_5;

	mov.f32 	%f34, 0f7F800000;
	fma.rn.f32 	%f36, %f2, %f34, %f34;

$L__BB7_5:
	setp.eq.f32 	%p6, %f2, 0f00000000;
	selp.f32 	%f35, 0fFF800000, %f36, %p6;
	st.global.f32 	[%rd1], %f35;
	bra.uni 	$L__BB7_6;

$L__BB7_2:
	setp.eq.f32 	%p3, %f1, 0f00000000;
	selp.f32 	%f6, 0fFF800000, 0f7FC00000, %p3;
	st.global.f32 	[%rd1], %f6;

$L__BB7_6:
	ret;

}
	// .globl	elementwise_pow
.visible .entry elementwise_pow(
	.param .u64 elementwise_pow_param_0,
	.param .u64 elementwise_pow_param_1,
	.param .u64 elementwise_pow_param_2,
	.param .u32 elementwise_pow_param_3
)
{
	.reg .pred 	%p<40>;
	.reg .f32 	%f<109>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd2, [elementwise_pow_param_0];
	ld.param.u64 	%rd3, [elementwise_pow_param_1];
	ld.param.u64 	%rd4, [elementwise_pow_param_2];
	ld.param.u32 	%r2, [elementwise_pow_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB8_25;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd7];
	setp.eq.f32 	%p3, %f1, 0f00000000;
	ld.global.f32 	%f2, [%rd9];
	setp.eq.f32 	%p4, %f2, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd1, %rd10, %rd6;
	@%p5 bra 	$L__BB8_24;
	bra.uni 	$L__BB8_2;

$L__BB8_24:
	mov.u32 	%r33, 1065353216;
	st.global.u32 	[%rd1], %r33;
	bra.uni 	$L__BB8_25;

$L__BB8_2:
	setp.gt.f32 	%p7, %f2, 0f00000000;
	and.pred  	%p8, %p3, %p7;
	@%p8 bra 	$L__BB8_23;
	bra.uni 	$L__BB8_3;

$L__BB8_23:
	mov.u32 	%r32, 0;
	st.global.u32 	[%rd1], %r32;
	bra.uni 	$L__BB8_25;

$L__BB8_3:
	setp.lt.f32 	%p10, %f2, 0f00000000;
	and.pred  	%p11, %p3, %p10;
	@%p11 bra 	$L__BB8_22;
	bra.uni 	$L__BB8_4;

$L__BB8_22:
	mov.u32 	%r31, 2139095040;
	st.global.u32 	[%rd1], %r31;
	bra.uni 	$L__BB8_25;

$L__BB8_4:
	setp.geu.f32 	%p12, %f1, 0f00000000;
	@%p12 bra 	$L__BB8_6;

	cvt.rmi.f32.f32 	%f17, %f2;
	setp.neu.f32 	%p13, %f17, %f2;
	@%p13 bra 	$L__BB8_21;
	bra.uni 	$L__BB8_6;

$L__BB8_21:
	mov.u32 	%r30, 2143289344;
	st.global.u32 	[%rd1], %r30;
	bra.uni 	$L__BB8_25;

$L__BB8_6:
	mul.f32 	%f19, %f2, 0f3F000000;
	cvt.rzi.f32.f32 	%f20, %f19;
	add.f32 	%f21, %f20, %f20;
	sub.f32 	%f22, %f2, %f21;
	abs.f32 	%f3, %f22;
	abs.f32 	%f4, %f1;
	setp.lt.f32 	%p14, %f4, 0f00800000;
	mul.f32 	%f23, %f4, 0f4B800000;
	selp.f32 	%f24, %f23, %f4, %p14;
	selp.f32 	%f25, 0fC3170000, 0fC2FE0000, %p14;
	mov.b32 	%r6, %f24;
	and.b32  	%r7, %r6, 8388607;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	%f26, %r8;
	shr.u32 	%r9, %r6, 23;
	cvt.rn.f32.u32 	%f27, %r9;
	add.f32 	%f28, %f25, %f27;
	setp.gt.f32 	%p15, %f26, 0f3FB504F3;
	mul.f32 	%f29, %f26, 0f3F000000;
	add.f32 	%f30, %f28, 0f3F800000;
	selp.f32 	%f31, %f30, %f28, %p15;
	selp.f32 	%f32, %f29, %f26, %p15;
	add.f32 	%f33, %f32, 0fBF800000;
	add.f32 	%f34, %f32, 0f3F800000;
	rcp.approx.ftz.f32 	%f35, %f34;
	add.f32 	%f36, %f33, %f33;
	mul.f32 	%f37, %f36, %f35;
	mul.f32 	%f38, %f37, %f37;
	mov.f32 	%f39, 0f3C4CAF63;
	mov.f32 	%f40, 0f3B18F0FE;
	fma.rn.f32 	%f41, %f40, %f38, %f39;
	mov.f32 	%f42, 0f3DAAAABD;
	fma.rn.f32 	%f43, %f41, %f38, %f42;
	mul.rn.f32 	%f44, %f43, %f38;
	mul.rn.f32 	%f45, %f44, %f37;
	sub.f32 	%f46, %f33, %f37;
	add.f32 	%f47, %f46, %f46;
	neg.f32 	%f48, %f37;
	fma.rn.f32 	%f49, %f48, %f33, %f47;
	mul.rn.f32 	%f50, %f35, %f49;
	add.f32 	%f51, %f45, %f37;
	sub.f32 	%f52, %f37, %f51;
	add.f32 	%f53, %f45, %f52;
	add.f32 	%f54, %f50, %f53;
	add.f32 	%f55, %f51, %f54;
	sub.f32 	%f56, %f51, %f55;
	add.f32 	%f57, %f54, %f56;
	mov.f32 	%f58, 0f3F317200;
	mul.rn.f32 	%f59, %f31, %f58;
	mov.f32 	%f60, 0f35BFBE8E;
	mul.rn.f32 	%f61, %f31, %f60;
	add.f32 	%f62, %f59, %f55;
	sub.f32 	%f63, %f59, %f62;
	add.f32 	%f64, %f55, %f63;
	add.f32 	%f65, %f57, %f64;
	add.f32 	%f66, %f61, %f65;
	add.f32 	%f67, %f62, %f66;
	sub.f32 	%f68, %f62, %f67;
	add.f32 	%f69, %f66, %f68;
	abs.f32 	%f5, %f2;
	setp.gt.f32 	%p16, %f5, 0f77F684DF;
	mul.f32 	%f70, %f2, 0f39000000;
	selp.f32 	%f71, %f70, %f2, %p16;
	mul.rn.f32 	%f72, %f71, %f67;
	neg.f32 	%f73, %f72;
	fma.rn.f32 	%f74, %f71, %f67, %f73;
	fma.rn.f32 	%f75, %f71, %f69, %f74;
	mov.f32 	%f76, 0f00000000;
	fma.rn.f32 	%f77, %f76, %f67, %f75;
	add.rn.f32 	%f78, %f72, %f77;
	neg.f32 	%f79, %f78;
	add.rn.f32 	%f80, %f72, %f79;
	add.rn.f32 	%f81, %f80, %f77;
	mov.b32 	%r10, %f78;
	setp.eq.s32 	%p17, %r10, 1118925336;
	add.s32 	%r11, %r10, -1;
	mov.b32 	%f82, %r11;
	add.f32 	%f83, %f81, 0f37000000;
	selp.f32 	%f6, %f83, %f81, %p17;
	selp.f32 	%f84, %f82, %f78, %p17;
	mov.f32 	%f85, 0f3FB8AA3B;
	mul.rn.f32 	%f86, %f84, %f85;
	cvt.rzi.f32.f32 	%f87, %f86;
	abs.f32 	%f88, %f87;
	setp.gt.f32 	%p18, %f88, 0f42FC0000;
	mov.b32 	%r12, %f87;
	and.b32  	%r13, %r12, -2147483648;
	or.b32  	%r14, %r13, 1123811328;
	mov.b32 	%f89, %r14;
	selp.f32 	%f90, %f89, %f87, %p18;
	mov.f32 	%f91, 0fBF317218;
	fma.rn.f32 	%f92, %f90, %f91, %f84;
	mov.f32 	%f93, 0f3102E308;
	fma.rn.f32 	%f94, %f90, %f93, %f92;
	mul.f32 	%f95, %f94, 0f3FB8AA3B;
	add.f32 	%f96, %f90, 0f4B40007F;
	mov.b32 	%r15, %f96;
	shl.b32 	%r16, %r15, 23;
	mov.b32 	%f97, %r16;
	ex2.approx.ftz.f32 	%f98, %f95;
	mul.f32 	%f7, %f98, %f97;
	setp.eq.f32 	%p19, %f7, 0f7F800000;
	mov.f32 	%f106, 0f7F800000;
	@%p19 bra 	$L__BB8_8;

	fma.rn.f32 	%f106, %f7, %f6, %f7;

$L__BB8_8:
	setp.lt.f32 	%p20, %f1, 0f00000000;
	setp.eq.f32 	%p21, %f3, 0f3F800000;
	and.pred  	%p1, %p20, %p21;
	@%p3 bra 	$L__BB8_12;
	bra.uni 	$L__BB8_9;

$L__BB8_12:
	add.f32 	%f102, %f1, %f1;
	mov.b32 	%r19, %f102;
	selp.b32 	%r20, %r19, 0, %p21;
	or.b32  	%r21, %r20, 2139095040;
	selp.b32 	%r22, %r21, %r20, %p10;
	mov.b32 	%f108, %r22;
	bra.uni 	$L__BB8_13;

$L__BB8_9:
	mov.b32 	%r17, %f106;
	xor.b32  	%r18, %r17, -2147483648;
	mov.b32 	%f99, %r18;
	selp.f32 	%f108, %f99, %f106, %p1;
	@%p12 bra 	$L__BB8_13;

	cvt.rzi.f32.f32 	%f100, %f2;
	setp.eq.f32 	%p24, %f100, %f2;
	@%p24 bra 	$L__BB8_13;

	mov.f32 	%f108, 0f7FFFFFFF;

$L__BB8_13:
	add.f32 	%f103, %f4, %f5;
	mov.b32 	%r23, %f103;
	setp.lt.s32 	%p27, %r23, 2139095040;
	@%p27 bra 	$L__BB8_20;

	setp.gtu.f32 	%p28, %f4, 0f7F800000;
	setp.gtu.f32 	%p29, %f5, 0f7F800000;
	or.pred  	%p30, %p28, %p29;
	@%p30 bra 	$L__BB8_19;
	bra.uni 	$L__BB8_15;

$L__BB8_19:
	add.f32 	%f108, %f1, %f2;
	bra.uni 	$L__BB8_20;

$L__BB8_15:
	setp.eq.f32 	%p31, %f5, 0f7F800000;
	@%p31 bra 	$L__BB8_18;
	bra.uni 	$L__BB8_16;

$L__BB8_18:
	setp.gt.f32 	%p35, %f4, 0f3F800000;
	selp.b32 	%r27, 2139095040, 0, %p35;
	xor.b32  	%r28, %r27, 2139095040;
	selp.b32 	%r29, %r28, %r27, %p10;
	mov.b32 	%f104, %r29;
	setp.eq.f32 	%p36, %f1, 0fBF800000;
	selp.f32 	%f108, 0f3F800000, %f104, %p36;
	bra.uni 	$L__BB8_20;

$L__BB8_16:
	setp.neu.f32 	%p32, %f4, 0f7F800000;
	@%p32 bra 	$L__BB8_20;

	setp.ge.f32 	%p33, %f2, 0f00000000;
	selp.b32 	%r24, 2139095040, 0, %p33;
	or.b32  	%r25, %r24, -2147483648;
	selp.b32 	%r26, %r25, %r24, %p1;
	mov.b32 	%f108, %r26;

$L__BB8_20:
	setp.eq.f32 	%p37, %f1, 0f3F800000;
	or.pred  	%p39, %p37, %p4;
	selp.f32 	%f105, 0f3F800000, %f108, %p39;
	st.global.f32 	[%rd1], %f105;

$L__BB8_25:
	ret;

}
	// .globl	elementwise_max
.visible .entry elementwise_max(
	.param .u64 elementwise_max_param_0,
	.param .u64 elementwise_max_param_1,
	.param .u64 elementwise_max_param_2,
	.param .u32 elementwise_max_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<12>;
	// demoted variable
	.shared .align 4 .b8 _ZZ15elementwise_maxE8shared_a[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ15elementwise_maxE8shared_b[1024];

	ld.param.u64 	%rd4, [elementwise_max_param_0];
	ld.param.u64 	%rd5, [elementwise_max_param_1];
	ld.param.u64 	%rd6, [elementwise_max_param_2];
	ld.param.u32 	%r8, [elementwise_max_param_3];
	setp.lt.s32 	%p1, %r8, 1;
	@%p1 bra 	$L__BB9_7;

	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	shl.b32 	%r12, %r11, 2;
	mov.u32 	%r13, _ZZ15elementwise_maxE8shared_a;
	add.s32 	%r1, %r13, %r12;
	mov.u32 	%r14, _ZZ15elementwise_maxE8shared_b;
	add.s32 	%r2, %r14, %r12;
	mov.u32 	%r15, %nctaid.x;
	mul.lo.s32 	%r3, %r15, %r10;
	mov.u32 	%r16, %ctaid.x;
	mad.lo.s32 	%r4, %r16, %r10, %r11;
	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd5;
	cvta.to.global.u64 	%rd3, %rd6;
	mov.u32 	%r17, 0;

$L__BB9_2:
	add.s32 	%r6, %r4, %r17;
	setp.ge.s32 	%p2, %r6, %r8;
	@%p2 bra 	$L__BB9_4;

	mul.wide.s32 	%rd7, %r6, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.f32 	%f1, [%rd8];
	st.shared.f32 	[%r1], %f1;
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f2, [%rd9];
	st.shared.f32 	[%r2], %f2;

$L__BB9_4:
	bar.sync 	0;
	@%p2 bra 	$L__BB9_6;

	ld.shared.f32 	%f3, [%r1];
	ld.shared.f32 	%f4, [%r2];
	max.f32 	%f5, %f3, %f4;
	mul.wide.s32 	%rd10, %r6, 4;
	add.s64 	%rd11, %rd3, %rd10;
	st.global.f32 	[%rd11], %f5;

$L__BB9_6:
	bar.sync 	0;
	add.s32 	%r17, %r17, %r3;
	setp.lt.s32 	%p4, %r17, %r8;
	@%p4 bra 	$L__BB9_2;

$L__BB9_7:
	ret;

}
	// .globl	elementwise_min
.visible .entry elementwise_min(
	.param .u64 elementwise_min_param_0,
	.param .u64 elementwise_min_param_1,
	.param .u64 elementwise_min_param_2,
	.param .u32 elementwise_min_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;
	// demoted variable
	.shared .align 4 .b8 _ZZ15elementwise_minE8shared_a[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ15elementwise_minE8shared_b[1024];

	ld.param.u64 	%rd4, [elementwise_min_param_0];
	ld.param.u64 	%rd5, [elementwise_min_param_1];
	ld.param.u64 	%rd6, [elementwise_min_param_2];
	ld.param.u32 	%r8, [elementwise_min_param_3];
	setp.lt.s32 	%p1, %r8, 1;
	@%p1 bra 	$L__BB10_5;

	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	shl.b32 	%r12, %r11, 2;
	mov.u32 	%r13, _ZZ15elementwise_minE8shared_a;
	add.s32 	%r1, %r13, %r12;
	mov.u32 	%r14, _ZZ15elementwise_minE8shared_b;
	add.s32 	%r2, %r14, %r12;
	mov.u32 	%r15, %nctaid.x;
	mul.lo.s32 	%r3, %r15, %r10;
	mov.u32 	%r16, %ctaid.x;
	mad.lo.s32 	%r4, %r16, %r10, %r11;
	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd5;
	cvta.to.global.u64 	%rd3, %rd6;
	mov.u32 	%r17, 0;

$L__BB10_2:
	add.s32 	%r6, %r4, %r17;
	setp.ge.s32 	%p2, %r6, %r8;
	@%p2 bra 	$L__BB10_4;

	mul.wide.s32 	%rd7, %r6, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.f32 	%f1, [%rd8];
	st.shared.f32 	[%r1], %f1;
	add.s64 	%rd9, %rd2, %rd7;
	ld.global.f32 	%f2, [%rd9];
	st.shared.f32 	[%r2], %f2;
	bar.sync 	0;
	ld.shared.f32 	%f3, [%r2];
	ld.shared.f32 	%f4, [%r1];
	min.f32 	%f5, %f4, %f3;
	add.s64 	%rd10, %rd3, %rd7;
	st.global.f32 	[%rd10], %f5;

$L__BB10_4:
	bar.sync 	0;
	add.s32 	%r17, %r17, %r3;
	setp.lt.s32 	%p3, %r17, %r8;
	@%p3 bra 	$L__BB10_2;

$L__BB10_5:
	ret;

}
	// .globl	elementwise_negate
.visible .entry elementwise_negate(
	.param .u64 elementwise_negate_param_0,
	.param .u64 elementwise_negate_param_1,
	.param .u32 elementwise_negate_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [elementwise_negate_param_0];
	ld.param.u64 	%rd2, [elementwise_negate_param_1];
	ld.param.u32 	%r2, [elementwise_negate_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	neg.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB11_2:
	ret;

}
	// .globl	elementwise_sqrt
.visible .entry elementwise_sqrt(
	.param .u64 elementwise_sqrt_param_0,
	.param .u64 elementwise_sqrt_param_1,
	.param .u32 elementwise_sqrt_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [elementwise_sqrt_param_0];
	ld.param.u64 	%rd3, [elementwise_sqrt_param_1];
	ld.param.u32 	%r2, [elementwise_sqrt_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB12_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.ltu.f32 	%p2, %f1, 0f00000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB12_3;
	bra.uni 	$L__BB12_2;

$L__BB12_3:
	mov.u32 	%r6, 2143289344;
	st.global.u32 	[%rd1], %r6;
	bra.uni 	$L__BB12_4;

$L__BB12_2:
	sqrt.rn.f32 	%f2, %f1;
	st.global.f32 	[%rd1], %f2;

$L__BB12_4:
	ret;

}
	// .globl	elementwise_sub
.visible .entry elementwise_sub(
	.param .u64 elementwise_sub_param_0,
	.param .u64 elementwise_sub_param_1,
	.param .u64 elementwise_sub_param_2,
	.param .u32 elementwise_sub_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_sub_param_0];
	ld.param.u64 	%rd2, [elementwise_sub_param_1];
	ld.param.u64 	%rd3, [elementwise_sub_param_2];
	ld.param.u32 	%r2, [elementwise_sub_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB13_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB13_2:
	ret;

}
	// .globl	elementwise_add_f64
.visible .entry elementwise_add_f64(
	.param .u64 elementwise_add_f64_param_0,
	.param .u64 elementwise_add_f64_param_1,
	.param .u64 elementwise_add_f64_param_2,
	.param .u32 elementwise_add_f64_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_add_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_add_f64_param_1];
	ld.param.u64 	%rd3, [elementwise_add_f64_param_2];
	ld.param.u32 	%r2, [elementwise_add_f64_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	add.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

$L__BB14_2:
	ret;

}
	// .globl	elementwise_abs_f64
.visible .entry elementwise_abs_f64(
	.param .u64 elementwise_abs_f64_param_0,
	.param .u64 elementwise_abs_f64_param_1,
	.param .u32 elementwise_abs_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [elementwise_abs_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_abs_f64_param_1];
	ld.param.u32 	%r2, [elementwise_abs_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB15_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	abs.f64 	%fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

$L__BB15_2:
	ret;

}
	// .globl	elementwise_mul_f64
.visible .entry elementwise_mul_f64(
	.param .u64 elementwise_mul_f64_param_0,
	.param .u64 elementwise_mul_f64_param_1,
	.param .u64 elementwise_mul_f64_param_2,
	.param .u32 elementwise_mul_f64_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_mul_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_mul_f64_param_1];
	ld.param.u64 	%rd3, [elementwise_mul_f64_param_2];
	ld.param.u32 	%r2, [elementwise_mul_f64_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB16_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	mul.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

$L__BB16_2:
	ret;

}
	// .globl	elementwise_div_f64
.visible .entry elementwise_div_f64(
	.param .u64 elementwise_div_f64_param_0,
	.param .u64 elementwise_div_f64_param_1,
	.param .u64 elementwise_div_f64_param_2,
	.param .u32 elementwise_div_f64_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd3, [elementwise_div_f64_param_0];
	ld.param.u64 	%rd4, [elementwise_div_f64_param_1];
	ld.param.u64 	%rd5, [elementwise_div_f64_param_2];
	ld.param.u32 	%r2, [elementwise_div_f64_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB17_4;

	cvta.to.global.u64 	%rd6, %rd4;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd1, [%rd8];
	setp.neu.f64 	%p2, %fd1, 0d0000000000000000;
	cvta.to.global.u64 	%rd9, %rd5;
	add.s64 	%rd2, %rd9, %rd7;
	@%p2 bra 	$L__BB17_3;
	bra.uni 	$L__BB17_2;

$L__BB17_3:
	cvta.to.global.u64 	%rd11, %rd3;
	shl.b64 	%rd12, %rd1, 3;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f64 	%fd2, [%rd13];
	div.rn.f64 	%fd3, %fd2, %fd1;
	st.global.f64 	[%rd2], %fd3;
	bra.uni 	$L__BB17_4;

$L__BB17_2:
	mov.u64 	%rd10, 9218868437227405312;
	st.global.u64 	[%rd2], %rd10;

$L__BB17_4:
	ret;

}
	// .globl	elementwise_exp_f64
.visible .entry elementwise_exp_f64(
	.param .u64 elementwise_exp_f64_param_0,
	.param .u64 elementwise_exp_f64_param_1,
	.param .u32 elementwise_exp_f64_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<41>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [elementwise_exp_f64_param_0];
	ld.param.u64 	%rd3, [elementwise_exp_f64_param_1];
	ld.param.u32 	%r5, [elementwise_exp_f64_param_2];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB18_5;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	mov.f64 	%fd6, 0d4338000000000000;
	mov.f64 	%fd7, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd8, %fd1, %fd7, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd8;
	}
	mov.f64 	%fd9, 0dC338000000000000;
	add.rn.f64 	%fd10, %fd8, %fd9;
	mov.f64 	%fd11, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd12, %fd10, %fd11, %fd1;
	mov.f64 	%fd13, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd14, %fd10, %fd13, %fd12;
	mov.f64 	%fd15, 0d3E928AF3FCA213EA;
	mov.f64 	%fd16, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd17, %fd16, %fd14, %fd15;
	mov.f64 	%fd18, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd19, %fd17, %fd14, %fd18;
	mov.f64 	%fd20, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd21, %fd19, %fd14, %fd20;
	mov.f64 	%fd22, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd23, %fd21, %fd14, %fd22;
	mov.f64 	%fd24, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd25, %fd23, %fd14, %fd24;
	mov.f64 	%fd26, 0d3F81111111122322;
	fma.rn.f64 	%fd27, %fd25, %fd14, %fd26;
	mov.f64 	%fd28, 0d3FA55555555502A1;
	fma.rn.f64 	%fd29, %fd27, %fd14, %fd28;
	mov.f64 	%fd30, 0d3FC5555555555511;
	fma.rn.f64 	%fd31, %fd29, %fd14, %fd30;
	mov.f64 	%fd32, 0d3FE000000000000B;
	fma.rn.f64 	%fd33, %fd31, %fd14, %fd32;
	mov.f64 	%fd34, 0d3FF0000000000000;
	fma.rn.f64 	%fd35, %fd33, %fd14, %fd34;
	fma.rn.f64 	%fd36, %fd35, %fd14, %fd34;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd36;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd36;
	}
	shl.b32 	%r9, %r2, 20;
	add.s32 	%r10, %r4, %r9;
	mov.b64 	%fd40, {%r3, %r10};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd1;
	}
	mov.b32 	%f2, %r11;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p2, %f1, 0f4086232B;
	@%p2 bra 	$L__BB18_4;

	setp.lt.f64 	%p3, %fd1, 0d0000000000000000;
	add.f64 	%fd37, %fd1, 0d7FF0000000000000;
	selp.f64 	%fd40, 0d0000000000000000, %fd37, %p3;
	setp.geu.f32 	%p4, %f1, 0f40874800;
	@%p4 bra 	$L__BB18_4;

	shr.u32 	%r12, %r2, 31;
	add.s32 	%r13, %r2, %r12;
	shr.s32 	%r14, %r13, 1;
	shl.b32 	%r15, %r14, 20;
	add.s32 	%r16, %r4, %r15;
	mov.b64 	%fd38, {%r3, %r16};
	sub.s32 	%r17, %r2, %r14;
	shl.b32 	%r18, %r17, 20;
	add.s32 	%r19, %r18, 1072693248;
	mov.u32 	%r20, 0;
	mov.b64 	%fd39, {%r20, %r19};
	mul.f64 	%fd40, %fd38, %fd39;

$L__BB18_4:
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 3;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f64 	[%rd9], %fd40;

$L__BB18_5:
	ret;

}
	// .globl	elementwise_log_f64
.visible .entry elementwise_log_f64(
	.param .u64 elementwise_log_f64_param_0,
	.param .u64 elementwise_log_f64_param_1,
	.param .u32 elementwise_log_f64_param_2
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [elementwise_log_f64_param_0];
	ld.param.u64 	%rd3, [elementwise_log_f64_param_1];
	ld.param.u32 	%r12, [elementwise_log_f64_param_2];
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB19_11;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd57, [%rd6];
	setp.gtu.f64 	%p2, %fd57, 0d0000000000000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB19_3;
	bra.uni 	$L__BB19_2;

$L__BB19_3:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd57;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd57;
	}
	setp.gt.s32 	%p4, %r29, 1048575;
	mov.u32 	%r31, -1023;
	@%p4 bra 	$L__BB19_5;

	mul.f64 	%fd57, %fd57, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd57;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd57;
	}
	mov.u32 	%r31, -1077;

$L__BB19_5:
	add.s32 	%r18, %r29, -1;
	setp.lt.u32 	%p5, %r18, 2146435071;
	@%p5 bra 	$L__BB19_7;
	bra.uni 	$L__BB19_6;

$L__BB19_7:
	shr.u32 	%r20, %r29, 20;
	add.s32 	%r32, %r31, %r20;
	and.b32  	%r21, %r29, -2146435073;
	or.b32  	%r22, %r21, 1072693248;
	mov.b64 	%fd58, {%r30, %r22};
	setp.lt.s32 	%p7, %r22, 1073127583;
	@%p7 bra 	$L__BB19_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd58;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd58;
	}
	add.s32 	%r25, %r24, -1048576;
	mov.b64 	%fd58, {%r23, %r25};
	add.s32 	%r32, %r32, 1;

$L__BB19_9:
	add.f64 	%fd13, %fd58, 0d3FF0000000000000;
	mov.f64 	%fd14, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd15, %fd13;
	neg.f64 	%fd16, %fd13;
	fma.rn.f64 	%fd17, %fd16, %fd15, %fd14;
	fma.rn.f64 	%fd18, %fd17, %fd17, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd15, %fd15;
	add.f64 	%fd20, %fd58, 0dBFF0000000000000;
	mul.f64 	%fd21, %fd20, %fd19;
	fma.rn.f64 	%fd22, %fd20, %fd19, %fd21;
	mul.f64 	%fd23, %fd22, %fd22;
	mov.f64 	%fd24, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd25, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd26, %fd25, %fd23, %fd24;
	mov.f64 	%fd27, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd28, %fd26, %fd23, %fd27;
	mov.f64 	%fd29, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd30, %fd28, %fd23, %fd29;
	mov.f64 	%fd31, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd32, %fd30, %fd23, %fd31;
	mov.f64 	%fd33, 0d3F624924923BE72D;
	fma.rn.f64 	%fd34, %fd32, %fd23, %fd33;
	mov.f64 	%fd35, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd36, %fd34, %fd23, %fd35;
	mov.f64 	%fd37, 0d3FB5555555555554;
	fma.rn.f64 	%fd38, %fd36, %fd23, %fd37;
	sub.f64 	%fd39, %fd20, %fd22;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd22;
	fma.rn.f64 	%fd42, %fd41, %fd20, %fd40;
	mul.f64 	%fd43, %fd19, %fd42;
	mul.f64 	%fd44, %fd23, %fd38;
	fma.rn.f64 	%fd45, %fd44, %fd22, %fd43;
	xor.b32  	%r26, %r32, -2147483648;
	mov.u32 	%r27, -2147483648;
	mov.u32 	%r28, 1127219200;
	mov.b64 	%fd46, {%r26, %r28};
	mov.b64 	%fd47, {%r27, %r28};
	sub.f64 	%fd48, %fd46, %fd47;
	mov.f64 	%fd49, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd50, %fd48, %fd49, %fd22;
	neg.f64 	%fd51, %fd48;
	fma.rn.f64 	%fd52, %fd51, %fd49, %fd50;
	sub.f64 	%fd53, %fd52, %fd22;
	sub.f64 	%fd54, %fd45, %fd53;
	mov.f64 	%fd55, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd56, %fd48, %fd55, %fd54;
	add.f64 	%fd59, %fd50, %fd56;
	bra.uni 	$L__BB19_10;

$L__BB19_2:
	setp.eq.f64 	%p3, %fd57, 0d0000000000000000;
	selp.f64 	%fd10, 0dFFF0000000000000, 0d7FF8000000000000, %p3;
	st.global.f64 	[%rd1], %fd10;
	bra.uni 	$L__BB19_11;

$L__BB19_6:
	mov.f64 	%fd11, 0d7FF0000000000000;
	fma.rn.f64 	%fd12, %fd57, %fd11, %fd11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd57;
	}
	mov.b32 	%f1, %r19;
	setp.eq.f32 	%p6, %f1, 0f00000000;
	selp.f64 	%fd59, 0dFFF0000000000000, %fd12, %p6;

$L__BB19_10:
	st.global.f64 	[%rd1], %fd59;

$L__BB19_11:
	ret;

}
	// .globl	elementwise_pow_f64
.visible .entry elementwise_pow_f64(
	.param .u64 elementwise_pow_f64_param_0,
	.param .u64 elementwise_pow_f64_param_1,
	.param .u64 elementwise_pow_f64_param_2,
	.param .u32 elementwise_pow_f64_param_3
)
{
	.reg .pred 	%p<132>;
	.reg .b32 	%r<105>;
	.reg .f64 	%fd<88>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd8, [elementwise_pow_f64_param_0];
	ld.param.u64 	%rd9, [elementwise_pow_f64_param_1];
	ld.param.u64 	%rd7, [elementwise_pow_f64_param_2];
	ld.param.u32 	%r20, [elementwise_pow_f64_param_3];
	cvta.to.global.u64 	%rd1, %rd9;
	cvta.to.global.u64 	%rd2, %rd8;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r24, %r22, %r21, %r23;
	shl.b32 	%r1, %r24, 1;
	or.b32  	%r25, %r1, 1;
	setp.lt.s32 	%p4, %r25, %r20;
	@%p4 bra 	$L__BB20_23;
	bra.uni 	$L__BB20_1;

$L__BB20_23:
	shr.s32 	%r50, %r1, 1;
	cvt.s64.s32 	%rd5, %r50;
	mul.wide.s32 	%rd17, %r50, 16;
	add.s64 	%rd18, %rd2, %rd17;
	ld.global.nc.v2.f64 	{%fd55, %fd56}, [%rd18];
	add.s64 	%rd19, %rd1, %rd17;
	ld.global.nc.v2.f64 	{%fd57, %fd58}, [%rd19];
	setp.eq.f64 	%p48, %fd55, 0d0000000000000000;
	setp.eq.f64 	%p49, %fd57, 0d0000000000000000;
	and.pred  	%p50, %p48, %p49;
	mov.f64 	%fd87, 0d3FF0000000000000;
	mov.f64 	%fd83, %fd87;
	@%p50 bra 	$L__BB20_43;

	mov.f64 	%fd83, 0d0000000000000000;
	setp.gt.f64 	%p52, %fd57, 0d0000000000000000;
	and.pred  	%p53, %p48, %p52;
	@%p53 bra 	$L__BB20_43;

	setp.lt.f64 	%p55, %fd57, 0d0000000000000000;
	and.pred  	%p56, %p48, %p55;
	mov.f64 	%fd83, 0d7FF0000000000000;
	@%p56 bra 	$L__BB20_43;

	setp.geu.f64 	%p57, %fd55, 0d0000000000000000;
	@%p57 bra 	$L__BB20_28;

	cvt.rmi.f64.f64 	%fd62, %fd57;
	setp.neu.f64 	%p58, %fd62, %fd57;
	mov.f64 	%fd83, 0d7FF8000000000000;
	@%p58 bra 	$L__BB20_43;

$L__BB20_28:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd55;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd57;
	}
	and.b32  	%r51, %r9, 2146435072;
	shr.u32 	%r52, %r51, 20;
	add.s32 	%r53, %r52, -1012;
	mov.b64 	%rd20, %fd57;
	shl.b64 	%rd21, %rd20, %r53;
	setp.eq.s64 	%p2, %rd21, -9223372036854775808;
	setp.ne.s64 	%p59, %rd21, -9223372036854775808;
	abs.f64 	%fd21, %fd55;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd21;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd57;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd81, [retval0+0];
	} // callseq 1
	setp.gt.s32 	%p60, %r8, -1;
	or.pred  	%p61, %p60, %p59;
	@%p61 bra 	$L__BB20_30;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r54}, %fd81;
	}
	xor.b32  	%r55, %r54, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r56, %temp}, %fd81;
	}
	mov.b64 	%fd81, {%r56, %r55};

$L__BB20_30:
	@%p48 bra 	$L__BB20_34;
	bra.uni 	$L__BB20_31;

$L__BB20_34:
	abs.f64 	%fd65, %fd57;
	setp.neu.f64 	%p66, %fd65, 0d3FE0000000000000;
	and.pred  	%p67, %p2, %p66;
	selp.u32 	%r103, 1, 0, %p67;
	selp.b32 	%r60, %r8, 0, %p67;
	mov.u32 	%r61, 0;
	or.b32  	%r62, %r60, 2146435072;
	setp.lt.s32 	%p68, %r9, 0;
	selp.b32 	%r63, %r62, %r60, %p68;
	mov.b64 	%fd81, {%r61, %r63};
	bra.uni 	$L__BB20_35;

$L__BB20_1:
	setp.ge.s32 	%p5, %r1, %r20;
	@%p5 bra 	$L__BB20_64;

	cvt.s64.s32 	%rd3, %r1;
	mul.wide.s32 	%rd10, %r1, 8;
	add.s64 	%rd11, %rd2, %rd10;
	add.s64 	%rd12, %rd1, %rd10;
	ld.global.nc.f64 	%fd1, [%rd11];
	setp.eq.f64 	%p6, %fd1, 0d0000000000000000;
	ld.global.nc.f64 	%fd2, [%rd12];
	setp.eq.f64 	%p7, %fd2, 0d0000000000000000;
	and.pred  	%p8, %p6, %p7;
	mov.f64 	%fd79, 0d3FF0000000000000;
	@%p8 bra 	$L__BB20_22;

	mov.f64 	%fd79, 0d0000000000000000;
	setp.gt.f64 	%p10, %fd2, 0d0000000000000000;
	and.pred  	%p11, %p6, %p10;
	@%p11 bra 	$L__BB20_22;

	setp.lt.f64 	%p13, %fd2, 0d0000000000000000;
	and.pred  	%p14, %p6, %p13;
	mov.f64 	%fd79, 0d7FF0000000000000;
	@%p14 bra 	$L__BB20_22;

	setp.geu.f64 	%p15, %fd1, 0d0000000000000000;
	@%p15 bra 	$L__BB20_7;

	cvt.rmi.f64.f64 	%fd49, %fd2;
	setp.neu.f64 	%p16, %fd49, %fd2;
	mov.f64 	%fd79, 0d7FF8000000000000;
	@%p16 bra 	$L__BB20_22;

$L__BB20_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd2;
	}
	and.b32  	%r26, %r3, 2146435072;
	shr.u32 	%r27, %r26, 20;
	add.s32 	%r28, %r27, -1012;
	mov.b64 	%rd13, %fd2;
	shl.b64 	%rd4, %rd13, %r28;
	setp.eq.s64 	%p1, %rd4, -9223372036854775808;
	setp.ne.s64 	%p17, %rd4, -9223372036854775808;
	abs.f64 	%fd3, %fd1;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd3;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd77, [retval0+0];
	} // callseq 0
	setp.gt.s32 	%p18, %r2, -1;
	or.pred  	%p19, %p18, %p17;
	@%p19 bra 	$L__BB20_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd77;
	}
	xor.b32  	%r30, %r29, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r31, %temp}, %fd77;
	}
	mov.b64 	%fd77, {%r31, %r30};

$L__BB20_9:
	@%p6 bra 	$L__BB20_13;
	bra.uni 	$L__BB20_10;

$L__BB20_13:
	abs.f64 	%fd52, %fd2;
	setp.neu.f64 	%p24, %fd52, 0d3FE0000000000000;
	and.pred  	%p25, %p1, %p24;
	selp.u32 	%r102, 1, 0, %p25;
	selp.b32 	%r32, %r2, 0, %p25;
	mov.u32 	%r33, 0;
	or.b32  	%r34, %r32, 2146435072;
	setp.lt.s32 	%p26, %r3, 0;
	selp.b32 	%r35, %r34, %r32, %p26;
	mov.b64 	%fd77, {%r33, %r35};
	bra.uni 	$L__BB20_14;

$L__BB20_31:
	selp.u32 	%r103, 1, 0, %p2;
	@%p60 bra 	$L__BB20_35;

	cvt.rzi.f64.f64 	%fd63, %fd57;
	setp.eq.f64 	%p64, %fd63, %fd57;
	@%p64 bra 	$L__BB20_35;

	mov.f64 	%fd81, 0dFFF8000000000000;

$L__BB20_35:
	add.f64 	%fd27, %fd55, %fd57;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %fd27;
	}
	and.b32  	%r65, %r64, 2146435072;
	setp.ne.s32 	%p69, %r65, 2146435072;
	mov.f64 	%fd82, %fd81;
	@%p69 bra 	$L__BB20_42;

	setp.gtu.f64 	%p70, %fd21, 0d7FF0000000000000;
	mov.f64 	%fd82, %fd27;
	@%p70 bra 	$L__BB20_42;

	abs.f64 	%fd66, %fd57;
	setp.gtu.f64 	%p71, %fd66, 0d7FF0000000000000;
	mov.f64 	%fd82, %fd27;
	@%p71 bra 	$L__BB20_42;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %fd57;
	}
	and.b32  	%r13, %r9, 2147483647;
	setp.eq.s32 	%p72, %r13, 2146435072;
	setp.eq.s32 	%p73, %r66, 0;
	and.pred  	%p74, %p72, %p73;
	@%p74 bra 	$L__BB20_41;
	bra.uni 	$L__BB20_39;

$L__BB20_41:
	setp.gt.f64 	%p84, %fd21, 0d3FF0000000000000;
	selp.b32 	%r73, 2146435072, 0, %p84;
	mov.u32 	%r74, 0;
	xor.b32  	%r75, %r73, 2146435072;
	setp.lt.s32 	%p85, %r9, 0;
	selp.b32 	%r76, %r75, %r73, %p85;
	setp.eq.f64 	%p86, %fd55, 0dBFF0000000000000;
	selp.b32 	%r77, 1072693248, %r76, %p86;
	mov.b64 	%fd82, {%r74, %r77};
	bra.uni 	$L__BB20_42;

$L__BB20_10:
	selp.u32 	%r102, 1, 0, %p1;
	@%p18 bra 	$L__BB20_14;

	cvt.rzi.f64.f64 	%fd50, %fd2;
	setp.eq.f64 	%p22, %fd50, %fd2;
	@%p22 bra 	$L__BB20_14;

	mov.f64 	%fd77, 0dFFF8000000000000;

$L__BB20_14:
	add.f64 	%fd9, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd9;
	}
	and.b32  	%r37, %r36, 2146435072;
	setp.ne.s32 	%p27, %r37, 2146435072;
	mov.f64 	%fd78, %fd77;
	@%p27 bra 	$L__BB20_21;

	setp.gtu.f64 	%p28, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd78, %fd9;
	@%p28 bra 	$L__BB20_21;

	abs.f64 	%fd53, %fd2;
	setp.gtu.f64 	%p29, %fd53, 0d7FF0000000000000;
	mov.f64 	%fd78, %fd9;
	@%p29 bra 	$L__BB20_21;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r38, %temp}, %fd2;
	}
	and.b32  	%r7, %r3, 2147483647;
	setp.eq.s32 	%p30, %r7, 2146435072;
	setp.eq.s32 	%p31, %r38, 0;
	and.pred  	%p32, %p30, %p31;
	@%p32 bra 	$L__BB20_20;
	bra.uni 	$L__BB20_18;

$L__BB20_20:
	setp.gt.f64 	%p42, %fd3, 0d3FF0000000000000;
	selp.b32 	%r45, 2146435072, 0, %p42;
	mov.u32 	%r46, 0;
	xor.b32  	%r47, %r45, 2146435072;
	setp.lt.s32 	%p43, %r3, 0;
	selp.b32 	%r48, %r47, %r45, %p43;
	setp.eq.f64 	%p44, %fd1, 0dBFF0000000000000;
	selp.b32 	%r49, 1072693248, %r48, %p44;
	mov.b64 	%fd78, {%r46, %r49};
	bra.uni 	$L__BB20_21;

$L__BB20_39:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r67, %temp}, %fd55;
	}
	and.b32  	%r68, %r8, 2147483647;
	setp.ne.s32 	%p75, %r68, 2146435072;
	setp.ne.s32 	%p76, %r67, 0;
	or.pred  	%p77, %p75, %p76;
	mov.f64 	%fd82, %fd81;
	@%p77 bra 	$L__BB20_42;

	setp.lt.s32 	%p78, %r8, 0;
	mov.u32 	%r69, 0;
	setp.gt.s32 	%p79, %r9, -1;
	selp.b32 	%r70, 2146435072, 0, %p79;
	setp.ne.s32 	%p80, %r103, 0;
	and.pred  	%p81, %p78, %p80;
	setp.ne.s32 	%p82, %r13, 1071644672;
	and.pred  	%p83, %p82, %p81;
	or.b32  	%r71, %r70, -2147483648;
	selp.b32 	%r72, %r71, %r70, %p83;
	mov.b64 	%fd82, {%r69, %r72};

$L__BB20_42:
	setp.eq.f64 	%p87, %fd55, 0d3FF0000000000000;
	or.pred  	%p89, %p87, %p49;
	selp.f64 	%fd83, 0d3FF0000000000000, %fd82, %p89;

$L__BB20_43:
	setp.eq.f64 	%p90, %fd58, 0d0000000000000000;
	setp.eq.f64 	%p91, %fd56, 0d0000000000000000;
	and.pred  	%p92, %p91, %p90;
	@%p92 bra 	$L__BB20_63;

	mov.f64 	%fd87, 0d0000000000000000;
	setp.gt.f64 	%p94, %fd58, 0d0000000000000000;
	and.pred  	%p95, %p91, %p94;
	@%p95 bra 	$L__BB20_63;

	setp.lt.f64 	%p97, %fd58, 0d0000000000000000;
	and.pred  	%p98, %p91, %p97;
	mov.f64 	%fd87, 0d7FF0000000000000;
	@%p98 bra 	$L__BB20_63;

	setp.geu.f64 	%p99, %fd56, 0d0000000000000000;
	@%p99 bra 	$L__BB20_48;

	cvt.rmi.f64.f64 	%fd71, %fd58;
	setp.neu.f64 	%p100, %fd71, %fd58;
	mov.f64 	%fd87, 0d7FF8000000000000;
	@%p100 bra 	$L__BB20_63;

$L__BB20_48:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd58;
	}
	and.b32  	%r78, %r15, 2146435072;
	shr.u32 	%r79, %r78, 20;
	add.s32 	%r80, %r79, -1012;
	mov.b64 	%rd24, %fd58;
	shl.b64 	%rd6, %rd24, %r80;
	setp.eq.s64 	%p3, %rd6, -9223372036854775808;
	setp.ne.s64 	%p101, %rd6, -9223372036854775808;
	abs.f64 	%fd33, %fd56;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd33;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd58;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd85, [retval0+0];
	} // callseq 2
	setp.gt.s32 	%p102, %r14, -1;
	or.pred  	%p103, %p102, %p101;
	@%p103 bra 	$L__BB20_50;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r81}, %fd85;
	}
	xor.b32  	%r82, %r81, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r83, %temp}, %fd85;
	}
	mov.b64 	%fd85, {%r83, %r82};

$L__BB20_50:
	@%p91 bra 	$L__BB20_54;
	bra.uni 	$L__BB20_51;

$L__BB20_54:
	abs.f64 	%fd74, %fd58;
	setp.neu.f64 	%p108, %fd74, 0d3FE0000000000000;
	and.pred  	%p109, %p3, %p108;
	selp.u32 	%r104, 1, 0, %p109;
	selp.b32 	%r84, %r14, 0, %p109;
	mov.u32 	%r85, 0;
	or.b32  	%r86, %r84, 2146435072;
	setp.lt.s32 	%p110, %r15, 0;
	selp.b32 	%r87, %r86, %r84, %p110;
	mov.b64 	%fd85, {%r85, %r87};
	bra.uni 	$L__BB20_55;

$L__BB20_51:
	selp.u32 	%r104, 1, 0, %p3;
	@%p102 bra 	$L__BB20_55;

	cvt.rzi.f64.f64 	%fd72, %fd58;
	setp.eq.f64 	%p106, %fd72, %fd58;
	@%p106 bra 	$L__BB20_55;

	mov.f64 	%fd85, 0dFFF8000000000000;

$L__BB20_55:
	add.f64 	%fd39, %fd56, %fd58;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r88}, %fd39;
	}
	and.b32  	%r89, %r88, 2146435072;
	setp.ne.s32 	%p111, %r89, 2146435072;
	mov.f64 	%fd86, %fd85;
	@%p111 bra 	$L__BB20_62;

	setp.gtu.f64 	%p112, %fd33, 0d7FF0000000000000;
	mov.f64 	%fd86, %fd39;
	@%p112 bra 	$L__BB20_62;

	abs.f64 	%fd75, %fd58;
	setp.gtu.f64 	%p113, %fd75, 0d7FF0000000000000;
	mov.f64 	%fd86, %fd39;
	@%p113 bra 	$L__BB20_62;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r90, %temp}, %fd58;
	}
	and.b32  	%r19, %r15, 2147483647;
	setp.eq.s32 	%p114, %r19, 2146435072;
	setp.eq.s32 	%p115, %r90, 0;
	and.pred  	%p116, %p114, %p115;
	@%p116 bra 	$L__BB20_61;
	bra.uni 	$L__BB20_59;

$L__BB20_61:
	setp.gt.f64 	%p126, %fd33, 0d3FF0000000000000;
	selp.b32 	%r97, 2146435072, 0, %p126;
	mov.u32 	%r98, 0;
	xor.b32  	%r99, %r97, 2146435072;
	setp.lt.s32 	%p127, %r15, 0;
	selp.b32 	%r100, %r99, %r97, %p127;
	setp.eq.f64 	%p128, %fd56, 0dBFF0000000000000;
	selp.b32 	%r101, 1072693248, %r100, %p128;
	mov.b64 	%fd86, {%r98, %r101};
	bra.uni 	$L__BB20_62;

$L__BB20_59:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r91, %temp}, %fd56;
	}
	and.b32  	%r92, %r14, 2147483647;
	setp.ne.s32 	%p117, %r92, 2146435072;
	setp.ne.s32 	%p118, %r91, 0;
	or.pred  	%p119, %p117, %p118;
	mov.f64 	%fd86, %fd85;
	@%p119 bra 	$L__BB20_62;

	setp.lt.s32 	%p120, %r14, 0;
	mov.u32 	%r93, 0;
	setp.gt.s32 	%p121, %r15, -1;
	selp.b32 	%r94, 2146435072, 0, %p121;
	setp.ne.s32 	%p122, %r104, 0;
	and.pred  	%p123, %p120, %p122;
	setp.ne.s32 	%p124, %r19, 1071644672;
	and.pred  	%p125, %p124, %p123;
	or.b32  	%r95, %r94, -2147483648;
	selp.b32 	%r96, %r95, %r94, %p125;
	mov.b64 	%fd86, {%r93, %r96};

$L__BB20_62:
	setp.eq.f64 	%p129, %fd56, 0d3FF0000000000000;
	or.pred  	%p131, %p129, %p90;
	selp.f64 	%fd87, 0d3FF0000000000000, %fd86, %p131;

$L__BB20_63:
	cvta.to.global.u64 	%rd25, %rd7;
	shl.b64 	%rd26, %rd5, 4;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.v2.f64 	[%rd27], {%fd83, %fd87};
	bra.uni 	$L__BB20_64;

$L__BB20_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r39, %temp}, %fd1;
	}
	and.b32  	%r40, %r2, 2147483647;
	setp.ne.s32 	%p33, %r40, 2146435072;
	setp.ne.s32 	%p34, %r39, 0;
	or.pred  	%p35, %p33, %p34;
	mov.f64 	%fd78, %fd77;
	@%p35 bra 	$L__BB20_21;

	setp.lt.s32 	%p36, %r2, 0;
	mov.u32 	%r41, 0;
	setp.gt.s32 	%p37, %r3, -1;
	selp.b32 	%r42, 2146435072, 0, %p37;
	setp.ne.s32 	%p38, %r102, 0;
	and.pred  	%p39, %p36, %p38;
	setp.ne.s32 	%p40, %r7, 1071644672;
	and.pred  	%p41, %p40, %p39;
	or.b32  	%r43, %r42, -2147483648;
	selp.b32 	%r44, %r43, %r42, %p41;
	mov.b64 	%fd78, {%r41, %r44};

$L__BB20_21:
	setp.eq.f64 	%p45, %fd1, 0d3FF0000000000000;
	or.pred  	%p47, %p45, %p7;
	selp.f64 	%fd79, 0d3FF0000000000000, %fd78, %p47;

$L__BB20_22:
	cvta.to.global.u64 	%rd14, %rd7;
	shl.b64 	%rd15, %rd3, 3;
	add.s64 	%rd16, %rd14, %rd15;
	st.global.f64 	[%rd16], %fd79;

$L__BB20_64:
	ret;

}
	// .globl	elementwise_max_f64
.visible .entry elementwise_max_f64(
	.param .u64 elementwise_max_f64_param_0,
	.param .u64 elementwise_max_f64_param_1,
	.param .u64 elementwise_max_f64_param_2,
	.param .u32 elementwise_max_f64_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_max_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_max_f64_param_1];
	ld.param.u64 	%rd3, [elementwise_max_f64_param_2];
	ld.param.u32 	%r2, [elementwise_max_f64_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB21_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	max.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

$L__BB21_2:
	ret;

}
	// .globl	elementwise_min_f64
.visible .entry elementwise_min_f64(
	.param .u64 elementwise_min_f64_param_0,
	.param .u64 elementwise_min_f64_param_1,
	.param .u64 elementwise_min_f64_param_2,
	.param .u32 elementwise_min_f64_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_min_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_min_f64_param_1];
	ld.param.u64 	%rd3, [elementwise_min_f64_param_2];
	ld.param.u32 	%r2, [elementwise_min_f64_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB22_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	min.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

$L__BB22_2:
	ret;

}
	// .globl	elementwise_negate_f64
.visible .entry elementwise_negate_f64(
	.param .u64 elementwise_negate_f64_param_0,
	.param .u64 elementwise_negate_f64_param_1,
	.param .u32 elementwise_negate_f64_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [elementwise_negate_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_negate_f64_param_1];
	ld.param.u32 	%r2, [elementwise_negate_f64_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB23_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	neg.f64 	%fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd2;

$L__BB23_2:
	ret;

}
	// .globl	elementwise_sqrt_f64
.visible .entry elementwise_sqrt_f64(
	.param .u64 elementwise_sqrt_f64_param_0,
	.param .u64 elementwise_sqrt_f64_param_1,
	.param .u32 elementwise_sqrt_f64_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [elementwise_sqrt_f64_param_0];
	ld.param.u64 	%rd3, [elementwise_sqrt_f64_param_1];
	ld.param.u32 	%r2, [elementwise_sqrt_f64_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB24_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	setp.ltu.f64 	%p2, %fd1, 0d0000000000000000;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p2 bra 	$L__BB24_3;
	bra.uni 	$L__BB24_2;

$L__BB24_3:
	mov.u64 	%rd8, 9221120237041090560;
	st.global.u64 	[%rd1], %rd8;
	bra.uni 	$L__BB24_4;

$L__BB24_2:
	sqrt.rn.f64 	%fd2, %fd1;
	st.global.f64 	[%rd1], %fd2;

$L__BB24_4:
	ret;

}
	// .globl	elementwise_sub_f64
.visible .entry elementwise_sub_f64(
	.param .u64 elementwise_sub_f64_param_0,
	.param .u64 elementwise_sub_f64_param_1,
	.param .u64 elementwise_sub_f64_param_2,
	.param .u32 elementwise_sub_f64_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [elementwise_sub_f64_param_0];
	ld.param.u64 	%rd2, [elementwise_sub_f64_param_1];
	ld.param.u64 	%rd3, [elementwise_sub_f64_param_2];
	ld.param.u32 	%r2, [elementwise_sub_f64_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB25_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f64 	%fd1, [%rd8];
	ld.global.f64 	%fd2, [%rd6];
	sub.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f64 	[%rd10], %fd3;

$L__BB25_2:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB26_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB26_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB26_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB26_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB26_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB26_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB26_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB26_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB26_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

