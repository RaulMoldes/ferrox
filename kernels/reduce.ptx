//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_86
.address_size 64

	// .globl	max_along_dim

.visible .entry max_along_dim(
	.param .u64 max_along_dim_param_0,
	.param .u64 max_along_dim_param_1,
	.param .u32 max_along_dim_param_2,
	.param .u32 max_along_dim_param_3,
	.param .u32 max_along_dim_param_4
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [max_along_dim_param_0];
	ld.param.u64 	%rd3, [max_along_dim_param_1];
	ld.param.u32 	%r20, [max_along_dim_param_2];
	ld.param.u32 	%r18, [max_along_dim_param_3];
	ld.param.u32 	%r19, [max_along_dim_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	mul.lo.s32 	%r24, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r24;
	@%p1 bra 	$L__BB0_9;

	div.s32 	%r2, %r1, %r19;
	mul.lo.s32 	%r25, %r2, %r19;
	sub.s32 	%r3, %r1, %r25;
	setp.lt.s32 	%p2, %r18, 1;
	mov.f32 	%f24, 0fFF800000;
	@%p2 bra 	$L__BB0_8;

	add.s32 	%r27, %r18, -1;
	and.b32  	%r36, %r18, 3;
	setp.lt.u32 	%p3, %r27, 3;
	mov.f32 	%f24, 0fFF800000;
	mov.u32 	%r34, 0;
	@%p3 bra 	$L__BB0_5;

	shl.b32 	%r5, %r19, 2;
	mad.lo.s32 	%r32, %r25, %r18, %r3;
	sub.s32 	%r7, %r36, %r18;
	mul.wide.s32 	%rd2, %r19, 4;

$L__BB0_4:
	mul.wide.s32 	%rd5, %r32, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f12, [%rd6];
	setp.gt.f32 	%p4, %f12, %f24;
	selp.f32 	%f13, %f12, %f24, %p4;
	add.s64 	%rd7, %rd6, %rd2;
	ld.global.f32 	%f14, [%rd7];
	setp.gt.f32 	%p5, %f14, %f13;
	selp.f32 	%f15, %f14, %f13, %p5;
	add.s64 	%rd8, %rd7, %rd2;
	ld.global.f32 	%f16, [%rd8];
	setp.gt.f32 	%p6, %f16, %f15;
	selp.f32 	%f17, %f16, %f15, %p6;
	add.s64 	%rd9, %rd8, %rd2;
	ld.global.f32 	%f18, [%rd9];
	setp.gt.f32 	%p7, %f18, %f17;
	selp.f32 	%f24, %f18, %f17, %p7;
	add.s32 	%r32, %r32, %r5;
	add.s32 	%r34, %r34, 4;
	add.s32 	%r30, %r7, %r34;
	setp.ne.s32 	%p8, %r30, 0;
	@%p8 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p9, %r36, 0;
	@%p9 bra 	$L__BB0_8;

	mad.lo.s32 	%r31, %r2, %r18, %r34;
	mad.lo.s32 	%r35, %r19, %r31, %r3;

$L__BB0_7:
	.pragma "nounroll";
	mul.wide.s32 	%rd10, %r35, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f32 	%f19, [%rd11];
	setp.gt.f32 	%p10, %f19, %f24;
	selp.f32 	%f24, %f19, %f24, %p10;
	add.s32 	%r35, %r35, %r19;
	add.s32 	%r36, %r36, -1;
	setp.ne.s32 	%p11, %r36, 0;
	@%p11 bra 	$L__BB0_7;

$L__BB0_8:
	cvta.to.global.u64 	%rd12, %rd3;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f32 	[%rd14], %f24;

$L__BB0_9:
	ret;

}
	// .globl	max_along_dim_f64
.visible .entry max_along_dim_f64(
	.param .u64 max_along_dim_f64_param_0,
	.param .u64 max_along_dim_f64_param_1,
	.param .u32 max_along_dim_f64_param_2,
	.param .u32 max_along_dim_f64_param_3,
	.param .u32 max_along_dim_f64_param_4
)
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<37>;
	.reg .f64 	%fd<25>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [max_along_dim_f64_param_0];
	ld.param.u64 	%rd3, [max_along_dim_f64_param_1];
	ld.param.u32 	%r20, [max_along_dim_f64_param_2];
	ld.param.u32 	%r18, [max_along_dim_f64_param_3];
	ld.param.u32 	%r19, [max_along_dim_f64_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %ctaid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r22, %r21, %r23;
	mul.lo.s32 	%r24, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r24;
	@%p1 bra 	$L__BB1_9;

	div.s32 	%r2, %r1, %r19;
	mul.lo.s32 	%r25, %r2, %r19;
	sub.s32 	%r3, %r1, %r25;
	setp.lt.s32 	%p2, %r18, 1;
	mov.f64 	%fd24, 0dFFF0000000000000;
	@%p2 bra 	$L__BB1_8;

	add.s32 	%r27, %r18, -1;
	and.b32  	%r36, %r18, 3;
	setp.lt.u32 	%p3, %r27, 3;
	mov.f64 	%fd24, 0dFFF0000000000000;
	mov.u32 	%r34, 0;
	@%p3 bra 	$L__BB1_5;

	shl.b32 	%r5, %r19, 2;
	mad.lo.s32 	%r32, %r25, %r18, %r3;
	sub.s32 	%r7, %r36, %r18;
	mul.wide.s32 	%rd2, %r19, 8;

$L__BB1_4:
	mul.wide.s32 	%rd5, %r32, 8;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f64 	%fd12, [%rd6];
	setp.gt.f64 	%p4, %fd12, %fd24;
	selp.f64 	%fd13, %fd12, %fd24, %p4;
	add.s64 	%rd7, %rd6, %rd2;
	ld.global.f64 	%fd14, [%rd7];
	setp.gt.f64 	%p5, %fd14, %fd13;
	selp.f64 	%fd15, %fd14, %fd13, %p5;
	add.s64 	%rd8, %rd7, %rd2;
	ld.global.f64 	%fd16, [%rd8];
	setp.gt.f64 	%p6, %fd16, %fd15;
	selp.f64 	%fd17, %fd16, %fd15, %p6;
	add.s64 	%rd9, %rd8, %rd2;
	ld.global.f64 	%fd18, [%rd9];
	setp.gt.f64 	%p7, %fd18, %fd17;
	selp.f64 	%fd24, %fd18, %fd17, %p7;
	add.s32 	%r32, %r32, %r5;
	add.s32 	%r34, %r34, 4;
	add.s32 	%r30, %r7, %r34;
	setp.ne.s32 	%p8, %r30, 0;
	@%p8 bra 	$L__BB1_4;

$L__BB1_5:
	setp.eq.s32 	%p9, %r36, 0;
	@%p9 bra 	$L__BB1_8;

	mad.lo.s32 	%r31, %r2, %r18, %r34;
	mad.lo.s32 	%r35, %r19, %r31, %r3;

$L__BB1_7:
	.pragma "nounroll";
	mul.wide.s32 	%rd10, %r35, 8;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f64 	%fd19, [%rd11];
	setp.gt.f64 	%p10, %fd19, %fd24;
	selp.f64 	%fd24, %fd19, %fd24, %p10;
	add.s32 	%r35, %r35, %r19;
	add.s32 	%r36, %r36, -1;
	setp.ne.s32 	%p11, %r36, 0;
	@%p11 bra 	$L__BB1_7;

$L__BB1_8:
	cvta.to.global.u64 	%rd12, %rd3;
	mul.wide.s32 	%rd13, %r1, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f64 	[%rd14], %fd24;

$L__BB1_9:
	ret;

}
	// .globl	sum_axis
.visible .entry sum_axis(
	.param .u64 sum_axis_param_0,
	.param .u64 sum_axis_param_1,
	.param .u32 sum_axis_param_2,
	.param .u32 sum_axis_param_3,
	.param .u32 sum_axis_param_4
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [sum_axis_param_0];
	ld.param.u64 	%rd3, [sum_axis_param_1];
	ld.param.u32 	%r19, [sum_axis_param_2];
	ld.param.u32 	%r17, [sum_axis_param_3];
	ld.param.u32 	%r18, [sum_axis_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r1, %ctaid.x;
	setp.ge.s32 	%p1, %r1, %r19;
	mov.u32 	%r2, %tid.x;
	setp.ge.s32 	%p2, %r2, %r18;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB2_9;

	setp.lt.s32 	%p4, %r17, 1;
	mov.f32 	%f24, 0f00000000;
	@%p4 bra 	$L__BB2_8;

	add.s32 	%r21, %r17, -1;
	and.b32  	%r31, %r17, 3;
	setp.lt.u32 	%p5, %r21, 3;
	mov.f32 	%f24, 0f00000000;
	mov.u32 	%r29, 0;
	@%p5 bra 	$L__BB2_5;

	shl.b32 	%r4, %r18, 2;
	mul.lo.s32 	%r23, %r1, %r18;
	mad.lo.s32 	%r27, %r23, %r17, %r2;
	sub.s32 	%r6, %r31, %r17;
	mul.wide.s32 	%rd2, %r18, 4;

$L__BB2_4:
	mul.wide.s32 	%rd5, %r27, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f12, [%rd6];
	add.f32 	%f13, %f24, %f12;
	add.s64 	%rd7, %rd6, %rd2;
	ld.global.f32 	%f14, [%rd7];
	add.f32 	%f15, %f13, %f14;
	add.s64 	%rd8, %rd7, %rd2;
	ld.global.f32 	%f16, [%rd8];
	add.f32 	%f17, %f15, %f16;
	add.s64 	%rd9, %rd8, %rd2;
	ld.global.f32 	%f18, [%rd9];
	add.f32 	%f24, %f17, %f18;
	add.s32 	%r27, %r27, %r4;
	add.s32 	%r29, %r29, 4;
	add.s32 	%r24, %r6, %r29;
	setp.ne.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB2_4;

$L__BB2_5:
	setp.eq.s32 	%p7, %r31, 0;
	@%p7 bra 	$L__BB2_8;

	mad.lo.s32 	%r25, %r1, %r17, %r29;
	mad.lo.s32 	%r30, %r18, %r25, %r2;

$L__BB2_7:
	.pragma "nounroll";
	mul.wide.s32 	%rd10, %r30, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f32 	%f19, [%rd11];
	add.f32 	%f24, %f24, %f19;
	add.s32 	%r30, %r30, %r18;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p8, %r31, 0;
	@%p8 bra 	$L__BB2_7;

$L__BB2_8:
	mad.lo.s32 	%r26, %r1, %r18, %r2;
	cvta.to.global.u64 	%rd12, %rd3;
	mul.wide.s32 	%rd13, %r26, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f32 	[%rd14], %f24;

$L__BB2_9:
	ret;

}
	// .globl	sum_axis_f64
.visible .entry sum_axis_f64(
	.param .u64 sum_axis_f64_param_0,
	.param .u64 sum_axis_f64_param_1,
	.param .u32 sum_axis_f64_param_2,
	.param .u32 sum_axis_f64_param_3,
	.param .u32 sum_axis_f64_param_4
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<32>;
	.reg .f64 	%fd<25>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [sum_axis_f64_param_0];
	ld.param.u64 	%rd3, [sum_axis_f64_param_1];
	ld.param.u32 	%r19, [sum_axis_f64_param_2];
	ld.param.u32 	%r17, [sum_axis_f64_param_3];
	ld.param.u32 	%r18, [sum_axis_f64_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r1, %ctaid.x;
	setp.ge.s32 	%p1, %r1, %r19;
	mov.u32 	%r2, %tid.x;
	setp.ge.s32 	%p2, %r2, %r18;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB3_9;

	setp.lt.s32 	%p4, %r17, 1;
	mov.f64 	%fd24, 0d0000000000000000;
	@%p4 bra 	$L__BB3_8;

	add.s32 	%r21, %r17, -1;
	and.b32  	%r31, %r17, 3;
	setp.lt.u32 	%p5, %r21, 3;
	mov.f64 	%fd24, 0d0000000000000000;
	mov.u32 	%r29, 0;
	@%p5 bra 	$L__BB3_5;

	shl.b32 	%r4, %r18, 2;
	mul.lo.s32 	%r23, %r1, %r18;
	mad.lo.s32 	%r27, %r23, %r17, %r2;
	sub.s32 	%r6, %r31, %r17;
	mul.wide.s32 	%rd2, %r18, 8;

$L__BB3_4:
	mul.wide.s32 	%rd5, %r27, 8;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f64 	%fd12, [%rd6];
	add.f64 	%fd13, %fd24, %fd12;
	add.s64 	%rd7, %rd6, %rd2;
	ld.global.f64 	%fd14, [%rd7];
	add.f64 	%fd15, %fd13, %fd14;
	add.s64 	%rd8, %rd7, %rd2;
	ld.global.f64 	%fd16, [%rd8];
	add.f64 	%fd17, %fd15, %fd16;
	add.s64 	%rd9, %rd8, %rd2;
	ld.global.f64 	%fd18, [%rd9];
	add.f64 	%fd24, %fd17, %fd18;
	add.s32 	%r27, %r27, %r4;
	add.s32 	%r29, %r29, 4;
	add.s32 	%r24, %r6, %r29;
	setp.ne.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB3_4;

$L__BB3_5:
	setp.eq.s32 	%p7, %r31, 0;
	@%p7 bra 	$L__BB3_8;

	mad.lo.s32 	%r25, %r1, %r17, %r29;
	mad.lo.s32 	%r30, %r18, %r25, %r2;

$L__BB3_7:
	.pragma "nounroll";
	mul.wide.s32 	%rd10, %r30, 8;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f64 	%fd19, [%rd11];
	add.f64 	%fd24, %fd24, %fd19;
	add.s32 	%r30, %r30, %r18;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p8, %r31, 0;
	@%p8 bra 	$L__BB3_7;

$L__BB3_8:
	mad.lo.s32 	%r26, %r1, %r18, %r2;
	cvta.to.global.u64 	%rd12, %rd3;
	mul.wide.s32 	%rd13, %r26, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f64 	[%rd14], %fd24;

$L__BB3_9:
	ret;

}

