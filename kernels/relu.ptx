//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-34385749
// Cuda compilation tools, release 12.5, V12.5.82
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_70
.address_size 64

	// .globl	relu_forward

.visible .entry relu_forward(
	.param .u64 relu_forward_param_0,
	.param .u64 relu_forward_param_1,
	.param .u32 relu_forward_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [relu_forward_param_0];
	ld.param.u64 	%rd2, [relu_forward_param_1];
	ld.param.u32 	%r2, [relu_forward_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mov.f32 	%f2, 0f00000000;
	max.ftz.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB0_2:
	ret;

}
	// .globl	relu_backward
.visible .entry relu_backward(
	.param .u64 relu_backward_param_0,
	.param .u64 relu_backward_param_1,
	.param .u64 relu_backward_param_2,
	.param .u32 relu_backward_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [relu_backward_param_0];
	ld.param.u64 	%rd3, [relu_backward_param_1];
	ld.param.u64 	%rd4, [relu_backward_param_2];
	ld.param.u32 	%r2, [relu_backward_param_3];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_4;

	cvta.to.global.u64 	%rd5, %rd3;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f4, [%rd7];
	setp.leu.ftz.f32 	%p2, %f4, 0f00000000;
	mov.f32 	%f5, 0f00000000;
	@%p2 bra 	$L__BB1_3;

	cvta.to.global.u64 	%rd8, %rd2;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f5, [%rd10];

$L__BB1_3:
	cvta.to.global.u64 	%rd11, %rd4;
	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.f32 	[%rd13], %f5;

$L__BB1_4:
	ret;

}

